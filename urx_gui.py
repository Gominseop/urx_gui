# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'opti_gui9.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import re
import threading
import os
import urx
from time import *
from tkinter import *
import tkinter.filedialog
import numpy as np
import math
from PythonLibMightyZap import *
from scipy.spatial.transform import Rotation as R

class Ui_MainWindow(object):
    def __init__(self):
        super().__init__()
        self.spd = 0.1
        self.acc = 0.1
        self.currAngles = []
        self.currLocation = []
        self.homeAngles = (2.022, -1.571, -1.571, -1.571, 1.571, 0.0)
        self.currGripper = 0


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        MainWindow.setMinimumSize(QtCore.QSize(1280, 720))
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.socket_blank_ip = QtWidgets.QLineEdit(self.centralwidget)
        self.socket_blank_ip.setMinimumSize(QtCore.QSize(0, 25))
        self.socket_blank_ip.setObjectName("socket_blank_ip")
        self.gridLayout.addWidget(self.socket_blank_ip, 1, 1, 1, 1)
        self.socket_label_ip = QtWidgets.QLabel(self.centralwidget)
        self.socket_label_ip.setObjectName("socket_label_ip")
        self.gridLayout.addWidget(self.socket_label_ip, 1, 0, 1, 1)
        self.socket_btn_connect = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.socket_btn_connect.sizePolicy().hasHeightForWidth())
        self.socket_btn_connect.setSizePolicy(sizePolicy)
        self.socket_btn_connect.setObjectName("socket_btn_connect")
        self.gridLayout.addWidget(self.socket_btn_connect, 1, 2, 2, 1)
        self.socket_blank_port = QtWidgets.QLineEdit(self.centralwidget)
        self.socket_blank_port.setMinimumSize(QtCore.QSize(0, 25))
        self.socket_blank_port.setObjectName("socket_blank_port")
        self.gridLayout.addWidget(self.socket_blank_port, 2, 1, 1, 1)
        self.socket_lable_port = QtWidgets.QLabel(self.centralwidget)
        self.socket_lable_port.setObjectName("socket_lable_port")
        self.gridLayout.addWidget(self.socket_lable_port, 2, 0, 1, 1)
        self.socket_label = QtWidgets.QLabel(self.centralwidget)
        self.socket_label.setMinimumSize(QtCore.QSize(400, 0))
        self.socket_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.socket_label.setStyleSheet("font: bold;")
        self.socket_label.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.socket_label.setObjectName("socket_label")
        self.gridLayout.addWidget(self.socket_label, 0, 0, 1, 3)
        self.gridLayout.setColumnMinimumWidth(0, 80)
        self.gridLayout.setColumnMinimumWidth(1, 200)
        self.gridLayout.setColumnMinimumWidth(2, 80)
        self.gridLayout.setRowMinimumHeight(0, 20)
        self.gridLayout.setRowMinimumHeight(1, 30)
        self.gridLayout.setRowMinimumHeight(2, 30)
        self.gridLayout_14.addLayout(self.gridLayout, 0, 0, 2, 1)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.gridLayout_14.addWidget(self.label_4, 0, 1, 1, 1)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.log_lab = QtWidgets.QLabel(self.centralwidget)
        self.log_lab.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.log_lab.setObjectName("log_lab")
        self.gridLayout_6.addWidget(self.log_lab, 0, 0, 1, 1)
        self.log_blank = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.log_blank.setObjectName("log_blank")
        self.gridLayout_6.addWidget(self.log_blank, 1, 0, 1, 1)
        self.gridLayout_6.setRowMinimumHeight(0, 20)
        self.gridLayout_6.setRowMinimumHeight(1, 30)
        self.gridLayout_14.addLayout(self.gridLayout_6, 10, 0, 3, 5)
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.current_graphic = QtWidgets.QGraphicsView(self.centralwidget)
        self.current_graphic.setMinimumSize(QtCore.QSize(200, 200))
        self.current_graphic.setObjectName("current_graphic")
        self.gridLayout_5.addWidget(self.current_graphic, 1, 0, 1, 1)
        self.current_lab = QtWidgets.QLabel(self.centralwidget)
        self.current_lab.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.current_lab.setObjectName("current_lab")
        self.gridLayout_5.addWidget(self.current_lab, 0, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.gridLayout_5.addWidget(self.label_5, 2, 0, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_5, 2, 0, 3, 1)
        self.move_spd_layout = QtWidgets.QGridLayout()
        self.move_spd_layout.setObjectName("move_spd_layout")
        self.move_spd_blank_speed = QtWidgets.QLineEdit(self.centralwidget)
        self.move_spd_blank_speed.setMinimumSize(QtCore.QSize(0, 20))
        self.move_spd_blank_speed.setMaximumSize(QtCore.QSize(100, 16777215))
        self.move_spd_blank_speed.setObjectName("move_spd_blank_speed")
        self.move_spd_layout.addWidget(self.move_spd_blank_speed, 0, 1, 1, 1)
        self.move_spd_txt2 = QtWidgets.QLabel(self.centralwidget)
        self.move_spd_txt2.setMinimumSize(QtCore.QSize(0, 25))
        self.move_spd_txt2.setObjectName("move_spd_txt2")
        self.move_spd_layout.addWidget(self.move_spd_txt2, 0, 6, 1, 1)
        self.move_spd_txt3 = QtWidgets.QLabel(self.centralwidget)
        self.move_spd_txt3.setMinimumSize(QtCore.QSize(0, 25))
        self.move_spd_txt3.setText("")
        self.move_spd_txt3.setObjectName("move_spd_txt3")
        self.move_spd_layout.addWidget(self.move_spd_txt3, 0, 3, 1, 1)
        self.move_spd_lab_speed = QtWidgets.QLabel(self.centralwidget)
        self.move_spd_lab_speed.setMinimumSize(QtCore.QSize(0, 25))
        self.move_spd_lab_speed.setObjectName("move_spd_lab_speed")
        self.move_spd_layout.addWidget(self.move_spd_lab_speed, 0, 0, 1, 1)
        self.move_spd_blank_acc = QtWidgets.QLineEdit(self.centralwidget)
        self.move_spd_blank_acc.setMinimumSize(QtCore.QSize(0, 20))
        self.move_spd_blank_acc.setMaximumSize(QtCore.QSize(100, 16777215))
        self.move_spd_blank_acc.setObjectName("move_spd_blank_acc")
        self.move_spd_layout.addWidget(self.move_spd_blank_acc, 0, 5, 1, 1)
        self.move_spd_txt = QtWidgets.QLabel(self.centralwidget)
        self.move_spd_txt.setMinimumSize(QtCore.QSize(0, 25))
        self.move_spd_txt.setObjectName("move_spd_txt")
        self.move_spd_layout.addWidget(self.move_spd_txt, 0, 2, 1, 1)
        self.move_spd_lab_acc = QtWidgets.QLabel(self.centralwidget)
        self.move_spd_lab_acc.setMinimumSize(QtCore.QSize(0, 25))
        self.move_spd_lab_acc.setObjectName("move_spd_lab_acc")
        self.move_spd_layout.addWidget(self.move_spd_lab_acc, 0, 4, 1, 1)
        self.move_spd_btn = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_spd_btn.sizePolicy().hasHeightForWidth())
        self.move_spd_btn.setSizePolicy(sizePolicy)
        self.move_spd_btn.setMinimumSize(QtCore.QSize(60, 25))
        self.move_spd_btn.setObjectName("move_spd_btn")
        self.move_spd_layout.addWidget(self.move_spd_btn, 0, 7, 1, 1)
        self.move_spd_layout.setColumnMinimumWidth(7, 40)
        self.gridLayout_14.addLayout(self.move_spd_layout, 1, 2, 1, 1)
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.move_btn_stop = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_btn_stop.sizePolicy().hasHeightForWidth())
        self.move_btn_stop.setSizePolicy(sizePolicy)
        self.move_btn_stop.setMinimumSize(QtCore.QSize(0, 25))
        self.move_btn_stop.setStyleSheet("color: rgb(255, 0, 0);\n"
"font: bold;")
        self.move_btn_stop.setObjectName("move_btn_stop")
        self.gridLayout_4.addWidget(self.move_btn_stop, 1, 1, 1, 1)
        self.move_btn_reset = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_btn_reset.sizePolicy().hasHeightForWidth())
        self.move_btn_reset.setSizePolicy(sizePolicy)
        self.move_btn_reset.setMinimumSize(QtCore.QSize(0, 25))
        self.move_btn_reset.setAutoFillBackground(False)
        self.move_btn_reset.setStyleSheet("font: bold;")
        self.move_btn_reset.setObjectName("move_btn_reset")
        self.gridLayout_4.addWidget(self.move_btn_reset, 1, 2, 1, 1)
        self.move_btn_home = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_btn_home.sizePolicy().hasHeightForWidth())
        self.move_btn_home.setSizePolicy(sizePolicy)
        self.move_btn_home.setMinimumSize(QtCore.QSize(0, 25))
        self.move_btn_home.setStyleSheet("font: bold;")
        self.move_btn_home.setObjectName("move_btn_home")
        self.gridLayout_4.addWidget(self.move_btn_home, 1, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setMinimumSize(QtCore.QSize(400, 0))
        self.label.setStyleSheet("font: bold;")
        self.label.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label.setObjectName("label")
        self.gridLayout_4.addWidget(self.label, 0, 0, 1, 3)
        self.gridLayout_4.setRowMinimumHeight(0, 20)
        self.gridLayout_14.addLayout(self.gridLayout_4, 0, 2, 1, 1)

        self.current_j_layout = QtWidgets.QGridLayout()
        self.current_j_layout.setHorizontalSpacing(10)
        self.current_j_layout.setObjectName("current_j_layout")
        self.current_j_blank_j1 = QtWidgets.QLineEdit(self.centralwidget)
        self.current_j_blank_j1.setMinimumSize(QtCore.QSize(0, 25))
        self.current_j_blank_j1.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignTop)
        self.current_j_blank_j1.setReadOnly(True)
        self.current_j_blank_j1.setObjectName("current_j_blank_j1")
        self.current_j_layout.addWidget(self.current_j_blank_j1, 1, 1, 1, 1)
        self.current_j_blank_j2 = QtWidgets.QLineEdit(self.centralwidget)
        self.current_j_blank_j2.setMinimumSize(QtCore.QSize(0, 25))
        self.current_j_blank_j2.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_j_blank_j2.setReadOnly(True)
        self.current_j_blank_j2.setObjectName("current_j_blank_j2")
        self.current_j_layout.addWidget(self.current_j_blank_j2, 1, 2, 1, 1)
        self.current_j_blank_j3 = QtWidgets.QLineEdit(self.centralwidget)
        self.current_j_blank_j3.setMinimumSize(QtCore.QSize(0, 25))
        self.current_j_blank_j3.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_j_blank_j3.setReadOnly(True)
        self.current_j_blank_j3.setObjectName("current_j_blank_j3")
        self.current_j_layout.addWidget(self.current_j_blank_j3, 1, 3, 1, 1)
        self.current_j_blank_j4 = QtWidgets.QLineEdit(self.centralwidget)
        self.current_j_blank_j4.setMinimumSize(QtCore.QSize(0, 25))
        self.current_j_blank_j4.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_j_blank_j4.setReadOnly(True)
        self.current_j_blank_j4.setObjectName("current_j_blank_j4")
        self.current_j_layout.addWidget(self.current_j_blank_j4, 1, 4, 1, 1)
        self.current_j_blank_j5 = QtWidgets.QLineEdit(self.centralwidget)
        self.current_j_blank_j5.setMinimumSize(QtCore.QSize(0, 25))
        self.current_j_blank_j5.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_j_blank_j5.setReadOnly(True)
        self.current_j_blank_j5.setObjectName("current_j_blank_j5")
        self.current_j_layout.addWidget(self.current_j_blank_j5, 1, 5, 1, 1)
        self.current_j_lab = QtWidgets.QLabel(self.centralwidget)
        self.current_j_lab.setObjectName("current_j_lab")
        self.current_j_layout.addWidget(self.current_j_lab, 1, 0, 1, 1)
        self.current_j_blank_j6 = QtWidgets.QLineEdit(self.centralwidget)
        self.current_j_blank_j6.setMinimumSize(QtCore.QSize(0, 25))
        self.current_j_blank_j6.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_j_blank_j6.setReadOnly(True)
        self.current_j_blank_j6.setObjectName("current_j_blank_j6")
        self.current_j_layout.addWidget(self.current_j_blank_j6, 1, 6, 1, 1)

        self.current_j_lab_j1 = QtWidgets.QLabel(self.centralwidget)
        self.current_j_lab_j1.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_j_lab_j1.setObjectName("current_j_lab_j1")
        self.current_j_layout.addWidget(self.current_j_lab_j1, 0, 1, 1, 1)
        self.current_j_lab_j2 = QtWidgets.QLabel(self.centralwidget)
        self.current_j_lab_j2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_j_lab_j2.setObjectName("current_j_lab_j2")
        self.current_j_layout.addWidget(self.current_j_lab_j2, 0, 2, 1, 1)
        self.current_j_lab_j3 = QtWidgets.QLabel(self.centralwidget)
        self.current_j_lab_j3.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_j_lab_j3.setObjectName("current_j_lab_j3")
        self.current_j_layout.addWidget(self.current_j_lab_j3, 0, 3, 1, 1)
        self.current_j_lab_j4 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.current_j_lab_j4.sizePolicy().hasHeightForWidth())
        self.current_j_lab_j4.setSizePolicy(sizePolicy)
        self.current_j_lab_j4.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_j_lab_j4.setObjectName("current_j_lab_j4")
        self.current_j_layout.addWidget(self.current_j_lab_j4, 0, 4, 1, 1)
        self.current_j_lab_j5 = QtWidgets.QLabel(self.centralwidget)
        self.current_j_lab_j5.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_j_lab_j5.setObjectName("current_j_lab_j5")
        self.current_j_layout.addWidget(self.current_j_lab_j5, 0, 5, 1, 1)
        self.current_j_lab_j6 = QtWidgets.QLabel(self.centralwidget)
        self.current_j_lab_j6.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_j_lab_j6.setObjectName("current_j_lab_j6")
        self.current_j_layout.addWidget(self.current_j_lab_j6, 0, 6, 1, 1)
        self.current_j_layout.setRowMinimumHeight(0, 20)
        self.current_j_layout.setRowMinimumHeight(1, 30)
        self.gridLayout_14.addLayout(self.current_j_layout, 5, 0, 1, 1)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.current_g_lab_move = QtWidgets.QLabel(self.centralwidget)
        self.current_g_lab_move.setMinimumSize(QtCore.QSize(0, 25))
        self.current_g_lab_move.setObjectName("current_g_lab_move")
        self.gridLayout_2.addWidget(self.current_g_lab_move, 0, 3, 1, 1)
        self.current_g_btn_move = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.current_g_btn_move.sizePolicy().hasHeightForWidth())
        self.current_g_btn_move.setSizePolicy(sizePolicy)
        self.current_g_btn_move.setMaximumSize(QtCore.QSize(101, 25))
        self.current_g_btn_move.setObjectName("current_g_btn_move")
        self.gridLayout_2.addWidget(self.current_g_btn_move, 0, 4, 1, 1)
        self.current_g_blank_gripper = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.current_g_blank_gripper.sizePolicy().hasHeightForWidth())
        self.current_g_blank_gripper.setSizePolicy(sizePolicy)
        self.current_g_blank_gripper.setMinimumSize(QtCore.QSize(0, 25))
        self.current_g_blank_gripper.setMaximumSize(QtCore.QSize(110, 16777215))
        self.current_g_blank_gripper.setObjectName("current_g_blank_gripper")
        self.gridLayout_2.addWidget(self.current_g_blank_gripper, 0, 1, 1, 1)
        self.current_g_lab_gripper = QtWidgets.QLabel(self.centralwidget)
        self.current_g_lab_gripper.setMinimumSize(QtCore.QSize(0, 25))
        self.current_g_lab_gripper.setObjectName("current_g_lab_gripper")
        self.gridLayout_2.addWidget(self.current_g_lab_gripper, 0, 0, 1, 1)
        self.current_g_txt = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.current_g_txt.sizePolicy().hasHeightForWidth())
        self.current_g_txt.setSizePolicy(sizePolicy)
        self.current_g_txt.setMinimumSize(QtCore.QSize(47, 0))
        self.current_g_txt.setText("")
        self.current_g_txt.setObjectName("current_g_txt")
        self.gridLayout_2.addWidget(self.current_g_txt, 0, 2, 1, 1)

        self.gridLayout_14.addLayout(self.gridLayout_2, 8, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.gridLayout_14.addWidget(self.label_2, 3, 2, 1, 1)
        self.current_spd_layout = QtWidgets.QGridLayout()
        self.current_spd_layout.setHorizontalSpacing(10)
        self.current_spd_layout.setObjectName("current_spd_layout")
        self.current_spd_txt2 = QtWidgets.QLabel(self.centralwidget)
        self.current_spd_txt2.setMinimumSize(QtCore.QSize(0, 25))
        self.current_spd_txt2.setObjectName("current_spd_txt2")
        self.current_spd_layout.addWidget(self.current_spd_txt2, 0, 6, 1, 1)
        self.current_spd_txt3 = QtWidgets.QLabel(self.centralwidget)
        self.current_spd_txt3.setText("")
        self.current_spd_txt3.setObjectName("current_spd_txt3")
        self.current_spd_layout.addWidget(self.current_spd_txt3, 0, 3, 1, 1)
        self.current_spd_blank_speed = QtWidgets.QLineEdit(self.centralwidget)
        self.current_spd_blank_speed.setMinimumSize(QtCore.QSize(110, 25))
        self.current_spd_blank_speed.setMaximumSize(QtCore.QSize(110, 16777215))
        self.current_spd_blank_speed.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.current_spd_blank_speed.setReadOnly(True)
        self.current_spd_blank_speed.setObjectName("current_spd_blank_speed")
        self.current_spd_layout.addWidget(self.current_spd_blank_speed, 0, 1, 1, 1)
        self.current_spd_lab_acc = QtWidgets.QLabel(self.centralwidget)
        self.current_spd_lab_acc.setMinimumSize(QtCore.QSize(0, 25))
        self.current_spd_lab_acc.setObjectName("current_spd_lab_acc")
        self.current_spd_layout.addWidget(self.current_spd_lab_acc, 0, 4, 1, 1)
        self.current_spd_blank_acc = QtWidgets.QLineEdit(self.centralwidget)
        self.current_spd_blank_acc.setMinimumSize(QtCore.QSize(0, 25))
        self.current_spd_blank_acc.setMaximumSize(QtCore.QSize(110, 16777215))
        self.current_spd_blank_acc.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.current_spd_blank_acc.setReadOnly(True)
        self.current_spd_blank_acc.setObjectName("current_spd_blank_acc")
        self.current_spd_layout.addWidget(self.current_spd_blank_acc, 0, 5, 1, 1)
        self.current_spd_txt = QtWidgets.QLabel(self.centralwidget)
        self.current_spd_txt.setMaximumSize(QtCore.QSize(0, 15))
        self.current_spd_txt.setObjectName("current_spd_txt")
        self.current_spd_layout.addWidget(self.current_spd_txt, 0, 2, 1, 1)
        self.current_spd_lab_speed = QtWidgets.QLabel(self.centralwidget)
        self.current_spd_lab_speed.setMinimumSize(QtCore.QSize(0, 25))
        self.current_spd_lab_speed.setObjectName("current_spd_lab_speed")
        self.current_spd_layout.addWidget(self.current_spd_lab_speed, 0, 0, 1, 1)
        self.gridLayout_14.addLayout(self.current_spd_layout, 7, 0, 1, 1)
        self.current_l_layout = QtWidgets.QGridLayout()
        self.current_l_layout.setHorizontalSpacing(10)
        self.current_l_layout.setObjectName("current_l_layout")
        self.current_l_blank_x = QtWidgets.QLineEdit(self.centralwidget)
        self.current_l_blank_x.setMinimumSize(QtCore.QSize(0, 25))
        self.current_l_blank_x.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_l_blank_x.setReadOnly(True)
        self.current_l_blank_x.setObjectName("current_l_blank_x")
        self.current_l_layout.addWidget(self.current_l_blank_x, 1, 1, 1, 1)
        self.current_l_blank_y = QtWidgets.QLineEdit(self.centralwidget)
        self.current_l_blank_y.setMinimumSize(QtCore.QSize(0, 25))
        self.current_l_blank_y.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_l_blank_y.setReadOnly(True)
        self.current_l_blank_y.setObjectName("current_l_blank_y")
        self.current_l_layout.addWidget(self.current_l_blank_y, 1, 2, 1, 1)
        self.current_l_blank_z = QtWidgets.QLineEdit(self.centralwidget)
        self.current_l_blank_z.setMinimumSize(QtCore.QSize(0, 25))
        self.current_l_blank_z.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_l_blank_z.setReadOnly(True)
        self.current_l_blank_z.setObjectName("current_l_blank_z")
        self.current_l_layout.addWidget(self.current_l_blank_z, 1, 3, 1, 1)
        self.current_l_blank_roll = QtWidgets.QLineEdit(self.centralwidget)
        self.current_l_blank_roll.setMinimumSize(QtCore.QSize(0, 25))
        self.current_l_blank_roll.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_l_blank_roll.setReadOnly(True)
        self.current_l_blank_roll.setObjectName("current_l_blank_roll")
        self.current_l_layout.addWidget(self.current_l_blank_roll, 1, 4, 1, 1)
        self.current_l_blank_yaw = QtWidgets.QLineEdit(self.centralwidget)
        self.current_l_blank_yaw.setMinimumSize(QtCore.QSize(0, 25))
        self.current_l_blank_yaw.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_l_blank_yaw.setReadOnly(True)
        self.current_l_blank_yaw.setObjectName("current_l_blank_yaw")
        self.current_l_layout.addWidget(self.current_l_blank_yaw, 1, 6, 1, 1)
        self.current_l_blank_pitch = QtWidgets.QLineEdit(self.centralwidget)
        self.current_l_blank_pitch.setMinimumSize(QtCore.QSize(0, 25))
        self.current_l_blank_pitch.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.current_l_blank_pitch.setReadOnly(True)
        self.current_l_blank_pitch.setObjectName("current_l_blank_pitch")
        self.current_l_layout.addWidget(self.current_l_blank_pitch, 1, 5, 1, 1)
        self.current_l_lab = QtWidgets.QLabel(self.centralwidget)
        self.current_l_lab.setObjectName("current_l_lab")
        self.current_l_layout.addWidget(self.current_l_lab, 1, 0, 1, 1)
        self.current_l_lab_x = QtWidgets.QLabel(self.centralwidget)
        self.current_l_lab_x.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_l_lab_x.setObjectName("current_l_lab_x")
        self.current_l_layout.addWidget(self.current_l_lab_x, 0, 1, 1, 1)
        self.current_l_lab_y = QtWidgets.QLabel(self.centralwidget)
        self.current_l_lab_y.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_l_lab_y.setObjectName("current_l_lab_y")
        self.current_l_layout.addWidget(self.current_l_lab_y, 0, 2, 1, 1)
        self.current_l_lab_z = QtWidgets.QLabel(self.centralwidget)
        self.current_l_lab_z.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_l_lab_z.setObjectName("current_l_lab_z")
        self.current_l_layout.addWidget(self.current_l_lab_z, 0, 3, 1, 1)
        self.current_l_lab_roll = QtWidgets.QLabel(self.centralwidget)
        self.current_l_lab_roll.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_l_lab_roll.setObjectName("current_l_lab_roll")
        self.current_l_layout.addWidget(self.current_l_lab_roll, 0, 4, 1, 1)
        self.current_l_lab_pitch = QtWidgets.QLabel(self.centralwidget)
        self.current_l_lab_pitch.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_l_lab_pitch.setObjectName("current_l_lab_pitch")
        self.current_l_layout.addWidget(self.current_l_lab_pitch, 0, 5, 1, 1)
        self.current_l_lab_yaw = QtWidgets.QLabel(self.centralwidget)
        self.current_l_lab_yaw.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.current_l_lab_yaw.setObjectName("current_l_lab_yaw")
        self.current_l_layout.addWidget(self.current_l_lab_yaw, 0, 6, 1, 1)
        self.current_l_layout.setRowMinimumHeight(0, 20)
        self.current_l_layout.setRowMinimumHeight(1, 30)
        self.gridLayout_14.addLayout(self.current_l_layout, 6, 0, 1, 1)

        self.gridLayout_9 = QtWidgets.QGridLayout()
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.move_l_blank_x = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_l_blank_x.sizePolicy().hasHeightForWidth())
        self.move_l_blank_x.setSizePolicy(sizePolicy)
        self.move_l_blank_x.setMinimumSize(QtCore.QSize(40, 20))
        self.move_l_blank_x.setMaximumSize(QtCore.QSize(40, 16777215))
        self.move_l_blank_x.setObjectName("move_l_blank_x")
        self.gridLayout_9.addWidget(self.move_l_blank_x, 0, 1, 1, 1)
        self.move_l_blank_y = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_l_blank_y.sizePolicy().hasHeightForWidth())
        self.move_l_blank_y.setSizePolicy(sizePolicy)
        self.move_l_blank_y.setMinimumSize(QtCore.QSize(40, 20))
        self.move_l_blank_y.setMaximumSize(QtCore.QSize(40, 16777215))
        self.move_l_blank_y.setObjectName("move_l_blank_y")
        self.gridLayout_9.addWidget(self.move_l_blank_y, 1, 1, 1, 1)
        self.move_l_blank_z = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_l_blank_z.sizePolicy().hasHeightForWidth())
        self.move_l_blank_z.setSizePolicy(sizePolicy)
        self.move_l_blank_z.setMinimumSize(QtCore.QSize(40, 20))
        self.move_l_blank_z.setMaximumSize(QtCore.QSize(40, 16777215))
        self.move_l_blank_z.setObjectName("move_l_blank_z")
        self.gridLayout_9.addWidget(self.move_l_blank_z, 2, 1, 1, 1)
        self.move_l_blank_roll = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_l_blank_roll.sizePolicy().hasHeightForWidth())
        self.move_l_blank_roll.setSizePolicy(sizePolicy)
        self.move_l_blank_roll.setMinimumSize(QtCore.QSize(40, 20))
        self.move_l_blank_roll.setMaximumSize(QtCore.QSize(40, 16777215))
        self.move_l_blank_roll.setObjectName("move_l_blank_roll")
        self.gridLayout_9.addWidget(self.move_l_blank_roll, 3, 1, 1, 1)
        self.move_l_blank_pitch = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_l_blank_pitch.sizePolicy().hasHeightForWidth())
        self.move_l_blank_pitch.setSizePolicy(sizePolicy)
        self.move_l_blank_pitch.setMinimumSize(QtCore.QSize(40, 20))
        self.move_l_blank_pitch.setMaximumSize(QtCore.QSize(40, 16777215))
        self.move_l_blank_pitch.setObjectName("move_l_blank_pitch")
        self.gridLayout_9.addWidget(self.move_l_blank_pitch, 4, 1, 1, 1)
        self.move_l_blank_yaw = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_l_blank_yaw.sizePolicy().hasHeightForWidth())
        self.move_l_blank_yaw.setSizePolicy(sizePolicy)
        self.move_l_blank_yaw.setMinimumSize(QtCore.QSize(40, 20))
        self.move_l_blank_yaw.setMaximumSize(QtCore.QSize(40, 16777215))
        self.move_l_blank_yaw.setObjectName("move_l_blank_roll")
        self.gridLayout_9.addWidget(self.move_l_blank_yaw, 5, 1, 1, 1)

        self.move_l_lab_roll = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_roll.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_roll.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_roll.setObjectName("move_l_lab_roll")
        self.gridLayout_9.addWidget(self.move_l_lab_roll, 3, 0, 1, 1)
        self.move_l_lab_x = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_x.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_x.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_x.setObjectName("move_l_lab_x")
        self.gridLayout_9.addWidget(self.move_l_lab_x, 0, 0, 1, 1)
        self.move_l_lab_z = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_z.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_z.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_z.setObjectName("move_l_lab_z")
        self.gridLayout_9.addWidget(self.move_l_lab_z, 2, 0, 1, 1)
        self.move_l_lab_yaw = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_yaw.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_yaw.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_yaw.setObjectName("move_l_lab_yaw")
        self.gridLayout_9.addWidget(self.move_l_lab_yaw, 5, 0, 1, 1)
        self.move_l_lab_y = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_y.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_y.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_y.setObjectName("move_l_lab_y")
        self.gridLayout_9.addWidget(self.move_l_lab_y, 1, 0, 1, 1)
        self.move_l_lab_pitch = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_pitch.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_pitch.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_pitch.setObjectName("move_l_lab_pitch")
        self.gridLayout_9.addWidget(self.move_l_lab_pitch, 4, 0, 1, 1)
        self.move_l_layout_dir = QtWidgets.QGridLayout()
        self.move_l_layout_dir.setContentsMargins(10, -1, 10, -1)
        self.move_l_layout_dir.setSpacing(10)
        self.move_l_layout_dir.setObjectName("move_l_layout_dir")
        self.y_pos = QtWidgets.QLabel(self.centralwidget)
        self.y_pos.setScaledContents(False)
        self.y_pos.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.y_pos.setObjectName("y_pos")
        self.move_l_layout_dir.addWidget(self.y_pos, 0, 2, 1, 1)
        self.btn_y_pos = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_y_pos.sizePolicy().hasHeightForWidth())
        self.btn_y_pos.setSizePolicy(sizePolicy)
        self.btn_y_pos.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_y_pos.setObjectName("btn_y_pos")
        self.move_l_layout_dir.addWidget(self.btn_y_pos, 1, 2, 1, 1)
        self.roll_neg = QtWidgets.QLabel(self.centralwidget)
        self.roll_neg.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.roll_neg.setObjectName("roll_neg")
        self.move_l_layout_dir.addWidget(self.roll_neg, 4, 0, 1, 1)
        self.btn_yaw_neg = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_yaw_neg.sizePolicy().hasHeightForWidth())
        self.btn_yaw_neg.setSizePolicy(sizePolicy)
        self.btn_yaw_neg.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_yaw_neg.setObjectName("btn_yaw_neg")
        self.move_l_layout_dir.addWidget(self.btn_yaw_neg, 1, 1, 1, 1)
        self.x_neg = QtWidgets.QLabel(self.centralwidget)
        self.x_neg.setAlignment(QtCore.Qt.AlignCenter)
        self.x_neg.setObjectName("x_neg")
        self.move_l_layout_dir.addWidget(self.x_neg, 2, 0, 1, 1)
        self.btn_y_neg = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_y_neg.sizePolicy().hasHeightForWidth())
        self.btn_y_neg.setSizePolicy(sizePolicy)
        self.btn_y_neg.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_y_neg.setObjectName("btn_y_neg")
        self.move_l_layout_dir.addWidget(self.btn_y_neg, 3, 2, 1, 1)
        self.btn_x_neg = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_x_neg.sizePolicy().hasHeightForWidth())
        self.btn_x_neg.setSizePolicy(sizePolicy)
        self.btn_x_neg.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_x_neg.setObjectName("btn_x_neg")
        self.move_l_layout_dir.addWidget(self.btn_x_neg, 2, 1, 1, 1)
        self.y_neg = QtWidgets.QLabel(self.centralwidget)
        self.y_neg.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.y_neg.setObjectName("y_neg")
        self.move_l_layout_dir.addWidget(self.y_neg, 4, 2, 1, 1)
        self.z_neg = QtWidgets.QLabel(self.centralwidget)
        self.z_neg.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.z_neg.setObjectName("z_neg")
        self.move_l_layout_dir.addWidget(self.z_neg, 4, 5, 1, 1)
        self.btn_z_pos = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_z_pos.sizePolicy().hasHeightForWidth())
        self.btn_z_pos.setSizePolicy(sizePolicy)
        self.btn_z_pos.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_z_pos.setObjectName("btn_z_pos")
        self.move_l_layout_dir.addWidget(self.btn_z_pos, 1, 5, 1, 1)
        self.yaw_pos = QtWidgets.QLabel(self.centralwidget)
        self.yaw_pos.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.yaw_pos.setObjectName("yaw_pos")
        self.move_l_layout_dir.addWidget(self.yaw_pos, 0, 4, 1, 1)
        self.pitch_pos = QtWidgets.QLabel(self.centralwidget)
        self.pitch_pos.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.pitch_pos.setObjectName("pitch_pos")
        self.move_l_layout_dir.addWidget(self.pitch_pos, 0, 6, 1, 1)
        self.roll_pos = QtWidgets.QLabel(self.centralwidget)
        self.roll_pos.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.roll_pos.setObjectName("roll_pos")
        self.move_l_layout_dir.addWidget(self.roll_pos, 4, 4, 1, 1)
        self.yaw_neg = QtWidgets.QLabel(self.centralwidget)
        self.yaw_neg.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.yaw_neg.setObjectName("yaw_neg")
        self.move_l_layout_dir.addWidget(self.yaw_neg, 0, 0, 1, 1)
        self.btn_pitch_pos = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_pitch_pos.sizePolicy().hasHeightForWidth())
        self.btn_pitch_pos.setSizePolicy(sizePolicy)
        self.btn_pitch_pos.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_pitch_pos.setObjectName("btn_pitch_pos")
        self.move_l_layout_dir.addWidget(self.btn_pitch_pos, 1, 6, 1, 1)
        self.btn_z_neg = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_z_neg.sizePolicy().hasHeightForWidth())
        self.btn_z_neg.setSizePolicy(sizePolicy)
        self.btn_z_neg.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_z_neg.setObjectName("btn_z_neg")
        self.move_l_layout_dir.addWidget(self.btn_z_neg, 3, 5, 1, 1)
        self.btn_roll_pos = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_roll_pos.sizePolicy().hasHeightForWidth())
        self.btn_roll_pos.setSizePolicy(sizePolicy)
        self.btn_roll_pos.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_roll_pos.setObjectName("btn_roll_pos")
        self.move_l_layout_dir.addWidget(self.btn_roll_pos, 3, 3, 1, 1)
        self.pitch_neg = QtWidgets.QLabel(self.centralwidget)
        self.pitch_neg.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.pitch_neg.setObjectName("pitch_neg")
        self.move_l_layout_dir.addWidget(self.pitch_neg, 4, 6, 1, 1)
        self.btn_roll_neg = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_roll_neg.sizePolicy().hasHeightForWidth())
        self.btn_roll_neg.setSizePolicy(sizePolicy)
        self.btn_roll_neg.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_roll_neg.setObjectName("btn_roll_neg")
        self.move_l_layout_dir.addWidget(self.btn_roll_neg, 3, 1, 1, 1)
        self.btn_pitch_neg = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_pitch_neg.sizePolicy().hasHeightForWidth())
        self.btn_pitch_neg.setSizePolicy(sizePolicy)
        self.btn_pitch_neg.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_pitch_neg.setObjectName("btn_pitch_neg")
        self.move_l_layout_dir.addWidget(self.btn_pitch_neg, 3, 6, 1, 1)
        self.x_pos = QtWidgets.QLabel(self.centralwidget)
        self.x_pos.setAlignment(QtCore.Qt.AlignCenter)
        self.x_pos.setObjectName("x_pos")
        self.move_l_layout_dir.addWidget(self.x_pos, 2, 4, 1, 1)
        self.btn_x_pos = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_x_pos.sizePolicy().hasHeightForWidth())
        self.btn_x_pos.setSizePolicy(sizePolicy)
        self.btn_x_pos.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_x_pos.setObjectName("btn_x_pos")
        self.move_l_layout_dir.addWidget(self.btn_x_pos, 2, 3, 1, 1)
        self.z_pos = QtWidgets.QLabel(self.centralwidget)
        self.z_pos.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.z_pos.setObjectName("z_pos")
        self.move_l_layout_dir.addWidget(self.z_pos, 0, 5, 1, 1)
        self.btn_yaw_pos = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_yaw_pos.sizePolicy().hasHeightForWidth())
        self.btn_yaw_pos.setSizePolicy(sizePolicy)
        self.btn_yaw_pos.setMinimumSize(QtCore.QSize(0, 20))
        self.btn_yaw_pos.setObjectName("btn_yaw_pos")
        self.move_l_layout_dir.addWidget(self.btn_yaw_pos, 1, 3, 1, 1)
        self.move_l_layout_dir.setColumnMinimumWidth(1, 30)
        self.move_l_layout_dir.setColumnMinimumWidth(2, 30)
        self.move_l_layout_dir.setColumnMinimumWidth(3, 30)
        self.move_l_layout_dir.setColumnMinimumWidth(5, 30)
        self.move_l_layout_dir.setColumnMinimumWidth(6, 30)
        self.gridLayout_9.addLayout(self.move_l_layout_dir, 0, 2, 6, 1)
        self.move_l_btn = QtWidgets.QPushButton(self.centralwidget)
        self.move_l_btn.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_btn.setObjectName("move_l_btn")
        self.gridLayout_9.addWidget(self.move_l_btn, 6, 0, 1, 3)
        self.gridLayout_9.setColumnMinimumWidth(0, 30)
        self.gridLayout_9.setColumnMinimumWidth(1, 30)
        self.gridLayout_14.addLayout(self.gridLayout_9, 5, 2, 4, 1)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.gridLayout_14.addWidget(self.label_6, 0, 3, 1, 1)
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.move_j_lab_j5 = QtWidgets.QLabel(self.centralwidget)
        self.move_j_lab_j5.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_lab_j5.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_j_lab_j5.setObjectName("move_j_lab_j5")
        self.gridLayout_7.addWidget(self.move_j_lab_j5, 4, 0, 1, 1)
        self.move_j_lab_j1 = QtWidgets.QLabel(self.centralwidget)
        self.move_j_lab_j1.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_lab_j1.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_j_lab_j1.setObjectName("move_j_lab_j1")
        self.gridLayout_7.addWidget(self.move_j_lab_j1, 0, 0, 1, 1)
        self.move_j_lab_j6 = QtWidgets.QLabel(self.centralwidget)
        self.move_j_lab_j6.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_lab_j6.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_j_lab_j6.setObjectName("move_j_lab_j6")
        self.gridLayout_7.addWidget(self.move_j_lab_j6, 5, 0, 1, 1)
        self.move_j_blank_j4 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_j_blank_j4.sizePolicy().hasHeightForWidth())
        self.move_j_blank_j4.setSizePolicy(sizePolicy)
        self.move_j_blank_j4.setMinimumSize(QtCore.QSize(30, 20))
        self.move_j_blank_j4.setMaximumSize(QtCore.QSize(50, 50))
        self.move_j_blank_j4.setObjectName("move_j_blank_j4")
        self.gridLayout_7.addWidget(self.move_j_blank_j4, 3, 1, 1, 1)
        self.move_j_slid_j6 = QtWidgets.QSlider(self.centralwidget)
        self.move_j_slid_j6.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_slid_j6.setOrientation(QtCore.Qt.Horizontal)
        self.move_j_slid_j6.setObjectName("move_j_slid_j6")
        self.gridLayout_7.addWidget(self.move_j_slid_j6, 5, 2, 1, 1)
        self.move_j_blank_j6 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_j_blank_j6.sizePolicy().hasHeightForWidth())
        self.move_j_blank_j6.setSizePolicy(sizePolicy)
        self.move_j_blank_j6.setMinimumSize(QtCore.QSize(30, 20))
        self.move_j_blank_j6.setMaximumSize(QtCore.QSize(50, 50))
        self.move_j_blank_j6.setObjectName("move_j_blank_j6")
        self.gridLayout_7.addWidget(self.move_j_blank_j6, 5, 1, 1, 1)
        self.move_j_blank_j2 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_j_blank_j2.sizePolicy().hasHeightForWidth())
        self.move_j_blank_j2.setSizePolicy(sizePolicy)
        self.move_j_blank_j2.setMinimumSize(QtCore.QSize(30, 20))
        self.move_j_blank_j2.setMaximumSize(QtCore.QSize(50, 50))
        self.move_j_blank_j2.setObjectName("move_j_blank_j2")
        self.gridLayout_7.addWidget(self.move_j_blank_j2, 1, 1, 1, 1)
        self.move_j_blank_j3 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_j_blank_j3.sizePolicy().hasHeightForWidth())
        self.move_j_blank_j3.setSizePolicy(sizePolicy)
        self.move_j_blank_j3.setMinimumSize(QtCore.QSize(30, 20))
        self.move_j_blank_j3.setMaximumSize(QtCore.QSize(50, 50))
        self.move_j_blank_j3.setObjectName("move_j_blank_j3")
        self.gridLayout_7.addWidget(self.move_j_blank_j3, 2, 1, 1, 1)
        self.move_j_slid_j2 = QtWidgets.QSlider(self.centralwidget)
        self.move_j_slid_j2.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_slid_j2.setOrientation(QtCore.Qt.Horizontal)
        self.move_j_slid_j2.setObjectName("move_j_slid_j2")
        self.gridLayout_7.addWidget(self.move_j_slid_j2, 1, 2, 1, 1)
        self.move_j_lab_j3 = QtWidgets.QLabel(self.centralwidget)
        self.move_j_lab_j3.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_lab_j3.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_j_lab_j3.setObjectName("move_j_lab_j3")
        self.gridLayout_7.addWidget(self.move_j_lab_j3, 2, 0, 1, 1)
        self.move_j_slid_j1 = QtWidgets.QSlider(self.centralwidget)
        self.move_j_slid_j1.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_slid_j1.setPageStep(10)
        self.move_j_slid_j1.setOrientation(QtCore.Qt.Horizontal)
        self.move_j_slid_j1.setObjectName("move_j_slid_j1")
        self.gridLayout_7.addWidget(self.move_j_slid_j1, 0, 2, 1, 1)
        self.move_j_btn = QtWidgets.QPushButton(self.centralwidget)
        self.move_j_btn.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_btn.setObjectName("move_j_btn")
        self.gridLayout_7.addWidget(self.move_j_btn, 6, 0, 1, 3)
        self.move_j_slid_j4 = QtWidgets.QSlider(self.centralwidget)
        self.move_j_slid_j4.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_slid_j4.setOrientation(QtCore.Qt.Horizontal)
        self.move_j_slid_j4.setObjectName("move_j_slid_j4")
        self.gridLayout_7.addWidget(self.move_j_slid_j4, 3, 2, 1, 1)
        self.move_j_slid_j3 = QtWidgets.QSlider(self.centralwidget)
        self.move_j_slid_j3.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_slid_j3.setOrientation(QtCore.Qt.Horizontal)
        self.move_j_slid_j3.setObjectName("move_j_slid_j3")
        self.gridLayout_7.addWidget(self.move_j_slid_j3, 2, 2, 1, 1)
        self.move_j_lab_j4 = QtWidgets.QLabel(self.centralwidget)
        self.move_j_lab_j4.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_lab_j4.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_j_lab_j4.setObjectName("move_j_lab_j4")
        self.gridLayout_7.addWidget(self.move_j_lab_j4, 3, 0, 1, 1)
        self.move_j_lab_j2 = QtWidgets.QLabel(self.centralwidget)
        self.move_j_lab_j2.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_lab_j2.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_j_lab_j2.setObjectName("move_j_lab_j2")
        self.gridLayout_7.addWidget(self.move_j_lab_j2, 1, 0, 1, 1)
        self.move_j_blank_j5 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_j_blank_j5.sizePolicy().hasHeightForWidth())
        self.move_j_blank_j5.setSizePolicy(sizePolicy)
        self.move_j_blank_j5.setMinimumSize(QtCore.QSize(30, 20))
        self.move_j_blank_j5.setMaximumSize(QtCore.QSize(50, 50))
        self.move_j_blank_j5.setObjectName("move_j_blank_j5")
        self.gridLayout_7.addWidget(self.move_j_blank_j5, 4, 1, 1, 1)
        self.move_j_blank_j1 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.move_j_blank_j1.sizePolicy().hasHeightForWidth())
        self.move_j_blank_j1.setSizePolicy(sizePolicy)
        self.move_j_blank_j1.setMinimumSize(QtCore.QSize(30, 20))
        self.move_j_blank_j1.setMaximumSize(QtCore.QSize(50, 50))
        self.move_j_blank_j1.setObjectName("move_j_blank_j1")
        self.gridLayout_7.addWidget(self.move_j_blank_j1, 0, 1, 1, 1)
        self.move_j_slid_j5 = QtWidgets.QSlider(self.centralwidget)
        self.move_j_slid_j5.setMinimumSize(QtCore.QSize(0, 20))
        self.move_j_slid_j5.setOrientation(QtCore.Qt.Horizontal)
        self.move_j_slid_j5.setObjectName("move_j_slid_j5")
        self.gridLayout_7.addWidget(self.move_j_slid_j5, 4, 2, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_7, 2, 2, 1, 1)
        self.set_layout = QtWidgets.QGridLayout()
        self.set_layout.setObjectName("set_layout")
        self.set_blank = QtWidgets.QListWidget(self.centralwidget)
        self.set_blank.setMinimumSize(QtCore.QSize(230, 0))
        self.set_blank.setObjectName("set_blank")
        self.set_layout.addWidget(self.set_blank, 4, 1, 1, 2)
        self.set_lab = QtWidgets.QLabel(self.centralwidget)
        self.set_lab.setMinimumSize(QtCore.QSize(400, 0))
        self.set_lab.setStyleSheet("font: bold;")
        self.set_lab.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.set_lab.setObjectName("set_lab")
        self.set_layout.addWidget(self.set_lab, 0, 1, 1, 2)
        self.gridLayout_12 = QtWidgets.QGridLayout()
        self.gridLayout_12.setObjectName("gridLayout_12")

        self.move_l_lab_x_2 = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_x_2.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_x_2.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_x_2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.move_l_lab_x_2.setObjectName("move_l_lab_x_2")
        self.gridLayout_12.addWidget(self.move_l_lab_x_2, 0, 0, 1, 1)
        self.move_l_lab_y_2 = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_y_2.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_y_2.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_y_2.setAlignment(QtCore.Qt.AlignBottom | QtCore.Qt.AlignHCenter)
        self.move_l_lab_y_2.setObjectName("move_l_lab_y_2")
        self.gridLayout_12.addWidget(self.move_l_lab_y_2, 0, 1, 1, 1)
        self.move_l_lab_z_2 = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_z_2.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_z_2.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_z_2.setAlignment(QtCore.Qt.AlignBottom | QtCore.Qt.AlignHCenter)
        self.move_l_lab_z_2.setObjectName("move_l_lab_z_2")
        self.gridLayout_12.addWidget(self.move_l_lab_z_2, 0, 2, 1, 1)
        self.move_l_lab_roll_2 = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_roll_2.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_roll_2.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_roll_2.setAlignment(QtCore.Qt.AlignBottom | QtCore.Qt.AlignHCenter)
        self.move_l_lab_roll_2.setObjectName("move_l_lab_roll_2")
        self.gridLayout_12.addWidget(self.move_l_lab_roll_2, 0, 3, 1, 1)
        self.move_l_lab_pitch_2 = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_pitch_2.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_pitch_2.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_pitch_2.setAlignment(QtCore.Qt.AlignBottom | QtCore.Qt.AlignHCenter)
        self.move_l_lab_pitch_2.setObjectName("move_l_lab_pitch_2")
        self.gridLayout_12.addWidget(self.move_l_lab_pitch_2, 0, 4, 1, 1)
        self.move_l_lab_yaw_2 = QtWidgets.QLabel(self.centralwidget)
        self.move_l_lab_yaw_2.setMinimumSize(QtCore.QSize(0, 20))
        self.move_l_lab_yaw_2.setMaximumSize(QtCore.QSize(30, 16777215))
        self.move_l_lab_yaw_2.setAlignment(QtCore.Qt.AlignBottom | QtCore.Qt.AlignHCenter)
        self.move_l_lab_yaw_2.setObjectName("move_l_lab_yaw_2")
        self.gridLayout_12.addWidget(self.move_l_lab_yaw_2, 0, 5, 1, 1)


        self.set_blank_x = QtWidgets.QLineEdit(self.centralwidget)
        self.set_blank_x.setMinimumSize(QtCore.QSize(0, 25))
        self.set_blank_x.setObjectName("set_blank_x")
        self.gridLayout_12.addWidget(self.set_blank_x, 1, 0, 1, 1)
        self.set_blank_y = QtWidgets.QLineEdit(self.centralwidget)
        self.set_blank_y.setMinimumSize(QtCore.QSize(0, 25))
        self.set_blank_y.setObjectName("set_blank_y")
        self.gridLayout_12.addWidget(self.set_blank_y, 1, 1, 1, 1)
        self.set_blank_z = QtWidgets.QLineEdit(self.centralwidget)
        self.set_blank_z.setMinimumSize(QtCore.QSize(0, 25))
        self.set_blank_z.setObjectName("set_blank_z")
        self.gridLayout_12.addWidget(self.set_blank_z, 1, 2, 1, 1)
        self.set_blank_roll = QtWidgets.QLineEdit(self.centralwidget)
        self.set_blank_roll.setMinimumSize(QtCore.QSize(0, 25))
        self.set_blank_roll.setObjectName("set_blank_roll")
        self.gridLayout_12.addWidget(self.set_blank_roll, 1, 3, 1, 1)
        self.set_blank_pitch = QtWidgets.QLineEdit(self.centralwidget)
        self.set_blank_pitch.setMinimumSize(QtCore.QSize(0, 25))
        self.set_blank_pitch.setObjectName("set_blank_pitch")
        self.gridLayout_12.addWidget(self.set_blank_pitch, 1, 4, 1, 1)
        self.set_blank_yaw = QtWidgets.QLineEdit(self.centralwidget)
        self.set_blank_yaw.setMinimumSize(QtCore.QSize(0, 25))
        self.set_blank_yaw.setObjectName("set_blank_yaw")
        self.gridLayout_12.addWidget(self.set_blank_yaw, 1, 5, 1, 1)

        self.set_blank_gipper = QtWidgets.QLineEdit(self.centralwidget)
        self.set_blank_gipper.setMinimumSize(QtCore.QSize(50, 25))
        self.set_blank_gipper.setObjectName("set_blank_gipper")
        self.gridLayout_12.addWidget(self.set_blank_gipper, 1, 6, 1, 1)
        self.set_btn_gripper_add = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.set_btn_gripper_add.sizePolicy().hasHeightForWidth())
        self.set_btn_gripper_add.setSizePolicy(sizePolicy)
        self.set_btn_gripper_add.setMinimumSize(QtCore.QSize(50, 25))
        self.set_btn_gripper_add.setObjectName("set_btn_gripper_add")
        self.gridLayout_12.addWidget(self.set_btn_gripper_add, 2, 6, 1, 1)
        self.set_lab_gripper = QtWidgets.QLabel(self.centralwidget)
        self.set_lab_gripper.setObjectName("set_lab_gripper")
        self.gridLayout_12.addWidget(self.set_lab_gripper, 0, 6, 1, 1)

        self.set_btn_delete_p = QtWidgets.QPushButton(self.centralwidget)
        self.set_btn_delete_p.setMinimumSize(QtCore.QSize(0, 25))
        self.set_btn_delete_p.setObjectName("set_btn_delete_p")
        self.gridLayout_12.addWidget(self.set_btn_delete_p, 2, 0, 1, 2)
        self.set_btn_add_p = QtWidgets.QPushButton(self.centralwidget)
        self.set_btn_add_p.setMinimumSize(QtCore.QSize(0, 25))
        self.set_btn_add_p.setObjectName("set_btn_add_p")
        self.gridLayout_12.addWidget(self.set_btn_add_p, 2, 4, 1, 2)
        self.set_layout.addLayout(self.gridLayout_12, 2, 1, 1, 2)


        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.set_btn_import = QtWidgets.QPushButton(self.centralwidget)
        self.set_btn_import.setMinimumSize(QtCore.QSize(0, 25))
        self.set_btn_import.setObjectName("set_btn_import")
        self.gridLayout_13.addWidget(self.set_btn_import, 0, 2, 1, 1)
        self.set_btn_move = QtWidgets.QPushButton(self.centralwidget)
        self.set_btn_move.setMinimumSize(QtCore.QSize(0, 25))
        self.set_btn_move.setObjectName("set_btn_move")
        self.gridLayout_13.addWidget(self.set_btn_move, 0, 3, 1, 1)
        self.set_btn_save = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.set_btn_save.sizePolicy().hasHeightForWidth())
        self.set_btn_save.setSizePolicy(sizePolicy)
        self.set_btn_save.setMinimumSize(QtCore.QSize(0, 25))
        self.set_btn_save.setObjectName("set_btn_save")
        self.gridLayout_13.addWidget(self.set_btn_save, 0, 4, 1, 1)
        self.set_btn_txt = QtWidgets.QLabel(self.centralwidget)
        self.set_btn_txt.setText("")
        self.set_btn_txt.setObjectName("set_btn_txt")
        self.gridLayout_13.addWidget(self.set_btn_txt, 0, 0, 1, 1)
        self.set_layout.addLayout(self.gridLayout_13, 5, 1, 1, 2)

        self.gridLayout_15 = QtWidgets.QGridLayout()
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.btngroup_JL = QtWidgets.QButtonGroup()
        self.btngroup_AR = QtWidgets.QButtonGroup()
        self.set_joint = QtWidgets.QRadioButton(self.centralwidget)
        self.set_joint.setMinimumSize(QtCore.QSize(0, 25))
        self.set_joint.setObjectName("set_joint")
        self.gridLayout_15.addWidget(self.set_joint, 0, 1, 1, 1)
        self.set_location = QtWidgets.QRadioButton(self.centralwidget)
        self.set_location.setMinimumSize(QtCore.QSize(0, 25))
        self.set_location.setObjectName("set_location")
        self.gridLayout_15.addWidget(self.set_location, 0, 2, 1, 1)
        self.set_relative = QtWidgets.QRadioButton(self.centralwidget)
        self.set_relative.setMinimumSize(QtCore.QSize(0, 25))
        self.set_relative.setObjectName("set_relative")
        self.gridLayout_15.addWidget(self.set_relative, 0, 4, 1, 1)
        self.set_absolute = QtWidgets.QRadioButton(self.centralwidget)
        self.set_absolute.setMinimumSize(QtCore.QSize(0, 25))
        self.set_absolute.setObjectName("set_absolute")
        self.gridLayout_15.addWidget(self.set_absolute, 0, 3, 1, 1)
        self.gridLayout_15.setRowMinimumHeight(0, 20)
        self.btngroup_JL.addButton(self.set_joint)
        self.btngroup_JL.addButton(self.set_location)
        self.btngroup_AR.addButton(self.set_absolute)
        self.btngroup_AR.addButton(self.set_relative)
        self.set_layout.addLayout(self.gridLayout_15, 1, 1, 1, 2)

        self.gridLayout_16 = QtWidgets.QGridLayout()
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.controller_blank = QtWidgets.QLineEdit(self.centralwidget)
        self.controller_blank.setMinimumSize(QtCore.QSize(0, 25))
        self.controller_blank.setObjectName("controller_blank")
        self.gridLayout_16.addWidget(self.controller_blank, 0, 1, 1, 1)
        self.controller_btn_move = QtWidgets.QToolButton(self.centralwidget)
        self.controller_btn_move.setMinimumSize(QtCore.QSize(95, 25))
        self.controller_btn_move.setObjectName("controller_btn_move")
        self.gridLayout_16.addWidget(self.controller_btn_move, 0, 3, 1, 1)
        self.controller_btn_search = QtWidgets.QToolButton(self.centralwidget)
        self.controller_btn_search.setMinimumSize(QtCore.QSize(95, 25))
        self.controller_btn_search.setObjectName("controller_btn_search")
        self.gridLayout_16.addWidget(self.controller_btn_search, 0, 2, 1, 1)
        self.set_layout.addLayout(self.gridLayout_16, 6, 1, 1, 2)

        self.gridLayout_14.addLayout(self.set_layout, 0, 4, 9, 1)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.gridLayout_14.addWidget(self.label_3, 9, 2, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.move_j_blank_j1.setRange(-3.142, 3.142)
        self.move_j_blank_j2.setRange(-3.142, 3.142)
        self.move_j_blank_j3.setRange(-3.142, 3.142)
        self.move_j_blank_j4.setRange(-3.142, 3.142)
        self.move_j_blank_j5.setRange(-3.142, 3.142)
        self.move_j_blank_j6.setRange(-3.142, 3.142)

        self.move_j_slid_j1.setRange(-3142, 3142)
        self.move_j_slid_j2.setRange(-3142, 3142)
        self.move_j_slid_j3.setRange(-3142, 3142)
        self.move_j_slid_j4.setRange(-3142, 3142)
        self.move_j_slid_j5.setRange(-3142, 3142)
        self.move_j_slid_j6.setRange(-3142, 3142)

        self.move_j_blank_j1.valueChanged.connect(self.move_j_slid_j1_setValue)
        self.move_j_blank_j2.valueChanged.connect(self.move_j_slid_j2_setValue)
        self.move_j_blank_j3.valueChanged.connect(self.move_j_slid_j3_setValue)
        self.move_j_blank_j4.valueChanged.connect(self.move_j_slid_j4_setValue)
        self.move_j_blank_j5.valueChanged.connect(self.move_j_slid_j5_setValue)
        self.move_j_blank_j6.valueChanged.connect(self.move_j_slid_j6_setValue)

        self.move_j_slid_j1.valueChanged.connect(self.move_j_blank_j1_setValue)
        self.move_j_slid_j2.valueChanged.connect(self.move_j_blank_j2_setValue)
        self.move_j_slid_j3.valueChanged.connect(self.move_j_blank_j3_setValue)
        self.move_j_slid_j4.valueChanged.connect(self.move_j_blank_j4_setValue)
        self.move_j_slid_j5.valueChanged.connect(self.move_j_blank_j5_setValue)
        self.move_j_slid_j6.valueChanged.connect(self.move_j_blank_j6_setValue)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        self.socket_btn_connect.setCheckable(True)
        self.socket_btn_connect.toggled.connect(self.socket_btn_connect_toggle)

        self.move_btn_home.clicked.connect(self.move_btn_home_click)
        self.move_btn_stop.clicked.connect(self.move_btn_stop_click)
        self.move_btn_reset.clicked.connect(self.move_btn_reset_click)

        self.move_spd_btn.clicked.connect(self.changeSpd)
        self.move_j_btn.clicked.connect(self.changeJoint)
        self.move_l_btn.clicked.connect(self.changeLocation)
        self.current_g_btn_move.clicked.connect(self.moveGripper)

        self.btn_x_pos.clicked.connect(self.changeX_pos)
        self.btn_x_neg.clicked.connect(self.changeX_neg)
        self.btn_y_pos.clicked.connect(self.changeY_pos)
        self.btn_y_neg.clicked.connect(self.changeY_neg)
        self.btn_z_pos.clicked.connect(self.changeZ_pos)
        self.btn_z_neg.clicked.connect(self.changeZ_neg)
        self.btn_yaw_pos.clicked.connect(self.changeYaw_pos)
        self.btn_yaw_neg.clicked.connect(self.changeYaw_neg)
        self.btn_pitch_pos.clicked.connect(self.changePitch_pos)
        self.btn_pitch_neg.clicked.connect(self.changePitch_neg)
        self.btn_roll_pos.clicked.connect(self.changeRoll_pos)
        self.btn_roll_neg.clicked.connect(self.changeRoll_neg)

        self.set_joint.clicked.connect(self.set_joint_click)
        self.set_location.clicked.connect(self.set_location_click)
        self.set_btn_gripper_add.clicked.connect(self.set_set_btn_gripper_add_click)  # true/false
        self.set_btn_import.clicked.connect(self.set_btn_import_click)
        self.set_btn_move.clicked.connect(self.set_btn_move_click)
        self.set_btn_add_p.clicked.connect(self.set_btn_add_p_click) #add item
        self.set_btn_delete_p.clicked.connect(self.set_btn_delete_p_click) #delete item
        self.set_btn_save.clicked.connect(self.save_btn_click) #save list

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.socket_blank_ip.setText(_translate("MainWindow", "192.168.50.7"))#192.168.50.6
        self.socket_label_ip.setText(_translate("MainWindow", "Bind IP"))
        self.socket_btn_connect.setText(_translate("MainWindow", "Connect"))
        self.socket_blank_port.setText(_translate("MainWindow", "COM3"))
        self.socket_lable_port.setText(_translate("MainWindow", "Gripper Port"))
        self.socket_label.setText(_translate("MainWindow", "Configuration"))
        self.log_lab.setText(_translate("MainWindow", "log"))
        self.current_lab.setText(_translate("MainWindow", "Current Status"))
        self.move_spd_txt2.setText(_translate("MainWindow", "(rad,m/s^2)"))
        self.move_spd_lab_speed.setText(_translate("MainWindow", "Speed"))
        self.move_spd_txt.setText(_translate("MainWindow", "(rad,m/s)"))
        self.move_spd_lab_acc.setText(_translate("MainWindow", "Accel"))
        self.move_spd_btn.setText(_translate("MainWindow", "Set"))
        self.move_btn_stop.setText(_translate("MainWindow", "E-Stop"))
        self.move_btn_reset.setText(_translate("MainWindow", "Reset"))
        self.move_btn_home.setText(_translate("MainWindow", "Home"))
        self.label.setText(_translate("MainWindow", "Move"))
        self.current_j_lab.setText(_translate("MainWindow", "Current Joint     "))
        self.current_j_lab_j1.setText(_translate("MainWindow", "J1"))
        self.current_j_lab_j2.setText(_translate("MainWindow", "J2"))
        self.current_j_lab_j3.setText(_translate("MainWindow", "J3"))
        self.current_j_lab_j4.setText(_translate("MainWindow", "J4"))
        self.current_j_lab_j5.setText(_translate("MainWindow", "J5"))
        self.current_j_lab_j6.setText(_translate("MainWindow", "J6"))
        self.current_g_lab_move.setText(_translate("MainWindow", "Move Gripper"))
        self.current_g_btn_move.setText(_translate("MainWindow", "Move"))
        #self.current_g_btn_f.setText(_translate("MainWindow", "False"))
        self.current_g_lab_gripper.setText(_translate("MainWindow", "Gripper"))
        self.current_spd_txt2.setText(_translate("MainWindow", "(rad,m)"))
        self.current_spd_lab_acc.setText(_translate("MainWindow", "Accel"))
        self.current_spd_txt.setText(_translate("MainWindow", "(rad,m)"))
        self.current_spd_lab_speed.setText(_translate("MainWindow", "Speed"))
        self.current_l_lab.setText(_translate("MainWindow", "Current Location"))
        self.current_l_lab_x.setText(_translate("MainWindow", "X"))
        self.current_l_lab_y.setText(_translate("MainWindow", "Y"))
        self.current_l_lab_z.setText(_translate("MainWindow", "Z"))
        self.current_l_lab_yaw.setText(_translate("MainWindow", "yaw"))
        self.current_l_lab_pitch.setText(_translate("MainWindow", "pitch"))
        self.current_l_lab_roll.setText(_translate("MainWindow", "roll"))
        self.move_l_lab_yaw.setText(_translate("MainWindow", "yaw"))
        self.move_l_lab_x.setText(_translate("MainWindow", "X"))
        self.move_l_lab_z.setText(_translate("MainWindow", "Z"))
        self.move_l_lab_roll.setText(_translate("MainWindow", "roll"))
        self.move_l_lab_y.setText(_translate("MainWindow", "Y"))
        self.move_l_lab_pitch.setText(_translate("MainWindow", "pitch"))
        self.y_pos.setText(_translate("MainWindow", "Y+"))
        self.btn_y_pos.setText(_translate("MainWindow", "↑"))
        self.roll_neg.setText(_translate("MainWindow", "r-"))
        self.btn_yaw_neg.setText(_translate("MainWindow", "↖"))
        self.x_neg.setText(_translate("MainWindow", "X-"))
        self.btn_y_neg.setText(_translate("MainWindow", "↓"))
        self.btn_x_neg.setText(_translate("MainWindow", "←"))
        self.y_neg.setText(_translate("MainWindow", "Y-"))
        self.z_neg.setText(_translate("MainWindow", "Z-"))
        self.btn_z_pos.setText(_translate("MainWindow", "↑"))
        self.yaw_pos.setText(_translate("MainWindow", "y+"))
        self.pitch_pos.setText(_translate("MainWindow", "p+"))
        self.roll_pos.setText(_translate("MainWindow", "r+"))
        self.yaw_neg.setText(_translate("MainWindow", "y-"))
        self.btn_pitch_pos.setText(_translate("MainWindow", "↖"))
        self.btn_z_neg.setText(_translate("MainWindow", "↓"))
        self.btn_roll_pos.setText(_translate("MainWindow", "↘"))
        self.pitch_neg.setText(_translate("MainWindow", "p-"))
        self.btn_roll_neg.setText(_translate("MainWindow", "↙"))
        self.btn_pitch_neg.setText(_translate("MainWindow", "↙"))
        self.x_pos.setText(_translate("MainWindow", "X+"))
        self.btn_x_pos.setText(_translate("MainWindow", "→"))
        self.z_pos.setText(_translate("MainWindow", "Z+"))
        self.btn_yaw_pos.setText(_translate("MainWindow", "↗"))
        self.move_l_btn.setText(_translate("MainWindow", "Move"))
        self.move_j_lab_j5.setText(_translate("MainWindow", "J5"))
        self.move_j_lab_j1.setText(_translate("MainWindow", "J1"))
        self.move_j_lab_j6.setText(_translate("MainWindow", "J6"))
        self.move_j_lab_j3.setText(_translate("MainWindow", "J3"))
        self.move_j_btn.setText(_translate("MainWindow", "Move"))
        self.move_j_lab_j4.setText(_translate("MainWindow", "J4"))
        self.move_j_lab_j2.setText(_translate("MainWindow", "J2"))
        self.set_lab.setText(_translate("MainWindow", "Move by Set"))
        self.move_l_lab_y_2.setText(_translate("MainWindow", "Y"))
        self.set_btn_delete_p.setText(_translate("MainWindow", "Delete"))
        self.move_l_lab_x_2.setText(_translate("MainWindow", "X"))
        self.move_l_lab_yaw_2.setText(_translate("MainWindow", "yaw"))
        self.move_l_lab_pitch_2.setText(_translate("MainWindow", "pitch"))
        self.move_l_lab_roll_2.setText(_translate("MainWindow", "roll"))
        self.move_l_lab_z_2.setText(_translate("MainWindow", "Z"))
        self.set_btn_gripper_add.setText(_translate("MainWindow", "Add G"))
        self.set_lab_gripper.setText(_translate("MainWindow", "Gripper"))
        self.set_btn_add_p.setText(_translate("MainWindow", "Add Position"))
        self.set_btn_import.setText(_translate("MainWindow", "Import"))
        self.set_btn_move.setText(_translate("MainWindow", "Move"))
        self.set_btn_save.setText(_translate("MainWindow", "Save"))
        self.set_relative.setText(_translate("MainWindow", "Relative"))
        self.set_absolute.setText(_translate("MainWindow", "Absolute"))
        self.set_joint.setText(_translate("MainWindow", "Joint"))
        self.set_location.setText(_translate("MainWindow", "Location"))
        self.controller_btn_move.setText(_translate("MainWindow", "Start"))
        self.controller_btn_search.setText(_translate("MainWindow", "Search"))

    def socket_btn_connect_toggle(self, state):

        if state:
            ip = self.socket_blank_ip.text()

            self.rob = urx.Robot(ip)
            OpenMightyZap(self.socket_blank_port.text(), 57600)

            self.socket_btn_connect.setText("Disconnect")

            self.getCurrPosition()

            self.updateJoint()#좌측
            self.updateLocation()

            self.update_changeLocation()#중앙하단
            self.update_changeJoint()#중앙상단

            self.updateSpd()
            self.updateGripper()

            self.log_blank.appendPlainText("robot connected")

        else:
            self.rob.close()
            CloseMightyZap()
            self.socket_btn_connect.setText("Connect")
            self.spd = 0.1
            self.acc = 0.1

            self.log_blank.appendPlainText("robot disconnected")


    def move_j_blank_j1_setValue(self):
        self.move_j_blank_j1.setValue(self.move_j_slid_j1.value()/1000)
    def move_j_blank_j2_setValue(self):
        self.move_j_blank_j2.setValue(self.move_j_slid_j2.value()/1000)
    def move_j_blank_j3_setValue(self):
        self.move_j_blank_j3.setValue(self.move_j_slid_j3.value()/1000)
    def move_j_blank_j4_setValue(self):
        self.move_j_blank_j4.setValue(self.move_j_slid_j4.value()/1000)
    def move_j_blank_j5_setValue(self):
        self.move_j_blank_j5.setValue(self.move_j_slid_j5.value()/1000)
    def move_j_blank_j6_setValue(self):
        self.move_j_blank_j6.setValue(self.move_j_slid_j6.value()/1000)

    def move_j_slid_j1_setValue(self):
        self.move_j_slid_j1.setValue(int(self.move_j_blank_j1.value() * 1000))
    def move_j_slid_j2_setValue(self):
        self.move_j_slid_j2.setValue(int(self.move_j_blank_j2.value() * 1000))
    def move_j_slid_j3_setValue(self):
        self.move_j_slid_j3.setValue(int(self.move_j_blank_j3.value() * 1000))
    def move_j_slid_j4_setValue(self):
        self.move_j_slid_j4.setValue(int(self.move_j_blank_j4.value() * 1000))
    def move_j_slid_j5_setValue(self):
        self.move_j_slid_j5.setValue(int(self.move_j_blank_j5.value() * 1000))
    def move_j_slid_j6_setValue(self):
        self.move_j_slid_j6.setValue(int(self.move_j_blank_j6.value() * 1000))

    def move_btn_home_click(self):
        self.rob.movej(self.homeAngles, self.spd, self.acc, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopj()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

        GoalPosition(0, 0)
        while True:
            sleep(0.5)
            now_p = PresentPosition(0)
            print(now_p)
            if now_p != -1 and now_p <= 20:
                break

        self.updateGripper()

    def move_btn_stop_click(self):
        self.rob.stop()

        self.getCurrJL()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()


    def move_btn_reset_click(self):
        self.rob.stop()
        self.rob.close()
        CloseMightyZap()

        ip = self.socket_blank_ip.text()
        self.spd = 0.1
        self.acc = 0.1

        self.rob = urx.Robot(ip)
        OpenMightyZap(self.socket_blank_port.text(), 57600)

        self.move_btn_home_click()

        self.updateJoint()  # 좌측
        self.updateLocation()

        self.update_changeLocation()  # 중앙하단
        self.update_changeJoint()  # 중앙상단

        self.updateSpd()
        self.updateGripper()

        self.log_blank.appendPlainText("robot reset")

    def getCurrPosition(self):
        self.currAngles = self.rob.getj()
        self.currLocation = self.rob.getl()

    def updateJoint(self):
        self.current_j_blank_j1.setText(str(round(self.currAngles[0], 3)))
        self.current_j_blank_j2.setText(str(round(self.currAngles[1], 3)))
        self.current_j_blank_j3.setText(str(round(self.currAngles[2], 3)))
        self.current_j_blank_j4.setText(str(round(self.currAngles[3], 3)))
        self.current_j_blank_j5.setText(str(round(self.currAngles[4], 3)))
        self.current_j_blank_j6.setText(str(round(self.currAngles[5], 3)))

        QtGui.QGuiApplication.processEvents()

    def updateLocation(self):
        r = R.from_rotvec(self.currLocation[3:])
        rpy = r.as_euler('xyz')

        self.current_l_blank_x.setText(str(round(self.currLocation[0], 3)))
        self.current_l_blank_y.setText(str(round(self.currLocation[1], 3)))
        self.current_l_blank_z.setText(str(round(self.currLocation[2], 3)))
        self.current_l_blank_roll.setText(str(round(rpy[0], 3)))
        self.current_l_blank_pitch.setText(str(round(rpy[1], 3)))
        self.current_l_blank_yaw.setText(str(round(rpy[2], 3)))
        QtGui.QGuiApplication.processEvents()

    def updateGripper(self):
        step = 1
        while True:
            try:
                g_position = PresentPosition(0)
                if g_position != -1:
                    break
                print(step)
                if step >= 5:
                    g_position = self.currGripper
                    self.log_blank.appendPlainText("error: fail to read current gripper position")
                    break
            except:
                step += 1

        self.currGripper = g_position
        self.current_g_blank_gripper.setText(str(g_position))

        QtGui.QGuiApplication.processEvents()

    def update_changeJoint(self):
        self.move_j_blank_j1.setValue(self.currAngles[0])
        self.move_j_blank_j2.setValue(self.currAngles[1])
        self.move_j_blank_j3.setValue(self.currAngles[2])
        self.move_j_blank_j4.setValue(self.currAngles[3])
        self.move_j_blank_j5.setValue(self.currAngles[4])
        self.move_j_blank_j6.setValue(self.currAngles[5])

        QtGui.QGuiApplication.processEvents()

    def update_changeLocation(self):
        r = R.from_rotvec(self.currLocation[3:])
        rpy = r.as_euler('xyz')

        self.move_l_blank_x.setText(str(round(self.currLocation[0], 3)))
        self.move_l_blank_y.setText(str(round(self.currLocation[1], 3)))
        self.move_l_blank_z.setText(str(round(self.currLocation[2], 3)))
        self.move_l_blank_roll.setText(str(round(rpy[0], 3)))
        self.move_l_blank_pitch.setText(str(round(rpy[1], 3)))
        self.move_l_blank_yaw.setText(str(round(rpy[2], 3)))

        QtGui.QGuiApplication.processEvents()

    def updateSpd(self):
        self.current_spd_blank_speed.setText(str(self.spd))
        self.current_spd_blank_acc.setText(str(self.acc))
        self.move_spd_blank_speed.setText(str(self.spd))
        self.move_spd_blank_acc.setText(str(self.acc))

        QtGui.QGuiApplication.processEvents()

    def changeSpd(self):
        self.spd = float(self.move_spd_blank_speed.text())
        self.acc = float(self.move_spd_blank_acc.text())
        self.updateSpd()

    def changeJoint(self):
        self.rob.movej((float(self.move_j_blank_j1.text()), float(self.move_j_blank_j2.text()), float(self.move_j_blank_j3.text()),
                     float(self.move_j_blank_j4.text()), float(self.move_j_blank_j5.text()), float(self.move_j_blank_j6.text())), self.spd, self.acc, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopj()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeLocation(self):
        rotvec = self.RPYtoRvec(float(self.move_l_blank_roll.text()), float(self.move_l_blank_pitch.text()), float(self.move_l_blank_yaw.text()))

        self.rob.movel((float(self.move_l_blank_x.text()), float(self.move_l_blank_y.text()), float(self.move_l_blank_z.text()),
                     rotvec[0], rotvec[1], rotvec[2]), self.spd, self.acc, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeX_pos(self):
        self.rob.movel((0.05, 0, 0, 0, 0, 0), self.spd, self.acc, relative=True, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeX_neg(self):
        self.rob.movel((-0.05, 0, 0, 0, 0, 0), self.spd, self.acc, relative=True, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeY_pos(self):
        self.rob.movel((0, 0.05, 0, 0, 0, 0), self.spd, self.acc, relative=True, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeY_neg(self):
        self.rob.movel((0, -0.05, 0, 0, 0, 0), self.spd, self.acc, relative=True, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeZ_pos(self):
        self.rob.movel((0, 0, 0.05, 0, 0, 0), self.spd, self.acc, relative=True, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeZ_neg(self):
        self.rob.movel((0, 0, -0.05, 0, 0, 0), self.spd, self.acc, relative=True, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeRoll_pos(self):
        b_vec = np.array(self.currLocation[3:])

        vecR = R.from_rotvec(b_vec)
        b_rom = vecR.as_matrix()

        t_matx = np.matrix([[1, 0, 0],
                           [0, math.cos(np.pi/6), -math.sin(np.pi/6)],
                           [0, math.sin(np.pi/6), math.cos(np.pi/6)]])

        a_rom = t_matx * b_rom

        matR = R.from_matrix(a_rom)
        a_vec = matR.as_rotvec()

        self.rob.movel((self.currLocation[0], self.currLocation[1], self.currLocation[2], a_vec[0], a_vec[1], a_vec[2]),
                       self.spd, self.acc, relative=False, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeRoll_neg(self):
        b_vec = np.array(self.currLocation[3:])

        vecR = R.from_rotvec(b_vec)
        b_rom = vecR.as_matrix()

        t_matx = np.matrix([[1, 0, 0],
                           [0, math.cos(-np.pi/6), -math.sin(-np.pi/6)],
                           [0, math.sin(-np.pi/6), math.cos(-np.pi/6)]])

        a_rom = t_matx * b_rom

        matR = R.from_matrix(a_rom)
        a_vec = matR.as_rotvec()

        self.rob.movel((self.currLocation[0], self.currLocation[1], self.currLocation[2], a_vec[0], a_vec[1], a_vec[2]), self.spd, self.acc, relative=False, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changePitch_pos(self):
        b_vec = np.array(self.currLocation[3:])

        vecR = R.from_rotvec(b_vec)
        b_rom = vecR.as_matrix()

        t_maty = np.matrix([[math.cos(np.pi/6), 0, math.sin(np.pi/6)],
                           [0, 1, 0],
                           [-math.sin(np.pi/6), 0, math.cos(np.pi/6)]])

        a_rom = t_maty * b_rom

        matR = R.from_matrix(a_rom)
        a_vec = matR.as_rotvec()

        self.rob.movel((self.currLocation[0], self.currLocation[1], self.currLocation[2], a_vec[0], a_vec[1], a_vec[2]), self.spd, self.acc, relative=False, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changePitch_neg(self):
        b_vec = np.array(self.currLocation[3:])

        vecR = R.from_rotvec(b_vec)
        b_rom = vecR.as_matrix()

        t_maty = np.matrix([[math.cos(-np.pi/6), 0, math.sin(-np.pi/6)],
                           [0, 1, 0],
                           [-math.sin(-np.pi/6), 0, math.cos(-np.pi/6)]])

        a_rom = t_maty * b_rom

        matR = R.from_matrix(a_rom)
        a_vec = matR.as_rotvec()

        self.rob.movel((self.currLocation[0], self.currLocation[1], self.currLocation[2], a_vec[0], a_vec[1], a_vec[2]), self.spd, self.acc, relative=False, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeYaw_pos(self):
        b_vec = np.array(self.currLocation[3:])

        vecR = R.from_rotvec(b_vec)
        b_rom = vecR.as_matrix()

        t_matz = np.matrix([[math.cos(np.pi / 6), -math.sin(np.pi / 6), 0],
                            [math.sin(np.pi / 6), math.cos(np.pi / 6), 0],
                            [0, 0, 1]])

        a_rom = t_matz * b_rom

        matR = R.from_matrix(a_rom)
        a_vec = matR.as_rotvec()

        self.rob.movel((self.currLocation[0], self.currLocation[1], self.currLocation[2], a_vec[0], a_vec[1], a_vec[2]),
                       self.spd, self.acc, relative=False, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def changeYaw_neg(self):
        b_vec = np.array(self.currLocation[3:])

        vecR = R.from_rotvec(b_vec)
        b_rom = vecR.as_matrix()

        t_matz = np.matrix([[math.cos(-np.pi / 6), -math.sin(-np.pi / 6), 0],
                            [math.sin(-np.pi / 6), math.cos(-np.pi / 6), 0],
                            [0, 0, 1]])

        a_rom = t_matz * b_rom

        matR = R.from_matrix(a_rom)
        a_vec = matR.as_rotvec()

        self.rob.movel((self.currLocation[0], self.currLocation[1], self.currLocation[2], a_vec[0], a_vec[1], a_vec[2]),
                       self.spd, self.acc, relative=False, wait=False)
        while True:
            sleep(0.2)
            if not self.rob.is_program_running():
                break
        self.rob.stopl()

        self.getCurrPosition()
        self.updateJoint()
        self.update_changeJoint()
        self.updateLocation()
        self.update_changeLocation()

    def moveGripper(self):
        t_position = int(self.current_g_blank_gripper.text())
        if t_position < 0 or t_position > 4095:
            self.log_blank.appendPlainText("error: out of range, target gripper position")
            return

        GoalPosition(0, t_position)
        while True:
            sleep(0.5)
            now_p = PresentPosition(0)
            print(now_p)
            if now_p != -1 and abs(t_position - now_p) <= 50:
                break

        self.updateGripper()

    def set_set_btn_gripper_add_click(self):
        G_position = self.set_blank_gipper.text()

        if self.set_relative.isChecked():
            if int(G_position) < -4095 or int(G_position) > 4095:
                self.log_blank.appendPlainText("error: out of range, relate gripper position")
                return

            if self.set_blank.currentRow() == -1:
                self.set_blank.addItem("G : R : " + G_position)
            else:
                self.set_blank.insertItem(self.set_blank.currentRow() + 1, "G : R : " + G_position)
        elif self.set_absolute.isChecked():
            if int(G_position) < 0 or int(G_position) > 4095:
                self.log_blank.appendPlainText("error: out of range, absolute gripper position")
                return

            if self.set_blank.currentRow() == -1:
                self.set_blank.addItem("G : A : " + G_position)
            else:
                self.set_blank.insertItem(self.set_blank.currentRow() + 1, "G : A : " + G_position)
        else:
            self.log_blank.appendPlainText("error: select relative or absolute")

    def set_btn_add_p_click(self):
        item = []
        item = [round(float(self.set_blank_x.text()), 3)] + [round(float(self.set_blank_y.text()), 3)] + [
            round(float(self.set_blank_z.text()), 3)] + [round(float(self.set_blank_roll.text()), 3)] + [
                   round(float(self.set_blank_pitch.text()), 3)] + [round(float(self.set_blank_yaw.text()), 3)]
        itemLine = str(item).lstrip('[')
        itemLine = itemLine.rstrip(']')

        print(self.set_blank.currentRow())
        if self.set_joint.isChecked():
            if self.set_relative.isChecked():
                if self.set_blank.currentRow() == -1:
                    self.set_blank.addItem("J : R : " + itemLine)
                else:
                    self.set_blank.insertItem(self.set_blank.currentRow()+1, "J : R : " + itemLine)
            elif self.set_absolute.isChecked():
                if self.set_blank.currentRow() == -1:
                    self.set_blank.addItem("J : A : " + itemLine)
                else:
                    self.set_blank.insertItem(self.set_blank.currentRow()+1, "J : A : " + itemLine)
            else:
                self.log_blank.appendPlainText("error: select relative or absolute")

        elif self.set_location.isChecked():
            if self.set_relative.isChecked():
                if self.set_blank.currentRow() == -1:
                    self.set_blank.addItem("L : R : " + itemLine)
                else:
                    self.set_blank.insertItem(self.set_blank.currentRow()+1, "L : R : " + itemLine)
            elif self.set_absolute.isChecked():
                if self.set_blank.currentRow() == -1:
                    self.set_blank.addItem("L : A : " + itemLine)
                else:
                    self.set_blank.insertItem(self.set_blank.currentRow()+1, "L : A : " + itemLine)
            else:
                self.log_blank.appendPlainText("error: select relative or absolute")

        else:
            self.log_blank.appendPlainText("error: select joint or location")

    # mov_l_lab_~~의 라벨 명 변경 필요
    def set_joint_click(self):
        self.move_l_lab_x_2.setText("J1")
        self.move_l_lab_y_2.setText("J2")
        self.move_l_lab_z_2.setText("J3")
        self.move_l_lab_roll_2.setText("J4")
        self.move_l_lab_pitch_2.setText("J5")
        self.move_l_lab_yaw_2.setText("J6")

    def set_location_click(self):
        self.move_l_lab_x_2.setText("X")
        self.move_l_lab_y_2.setText("Y")
        self.move_l_lab_z_2.setText("Z")
        self.move_l_lab_roll_2.setText("roll")
        self.move_l_lab_pitch_2.setText("pitch")
        self.move_l_lab_yaw_2.setText("yaw")


    def set_btn_delete_p_click(self):
        self.set_blank.takeItem(self.set_blank.currentRow())

    def set_btn_import_click(self):
        self.set_blank.clear()
        fname = QtWidgets.QFileDialog.getOpenFileName()

        if fname[0]:
            self.log_blank.appendPlainText("file imported " + fname[0])

            f = open(fname[0], 'r')

            while True:
                line = f.readline()
                if not line:
                    break
                line = line.rstrip('\n')
                self.set_blank.addItem(line)

            f.close()

    def set_btn_move_click(self):
        for i in range(self.set_blank.count()):
            txt = self.set_blank.item(i).text()
            item = txt.split(' : ')

            if item[0] == "J":
                if item[1] == "R":
                    items = item[2].split(', ')
                    locSet = [float(items[i]) for i in range(0, 6)]
                    self.rob.movej((locSet[0], locSet[1], locSet[2], locSet[3], locSet[4], locSet[5]),
                                   self.spd, self.acc, relative=True, wait=False)
                    while True:
                        sleep(0.2)
                        if not self.rob.is_program_running():
                            break
                    self.rob.stopj()

                    self.getCurrPosition()
                    self.updateJoint()
                    self.update_changeJoint()
                    self.updateLocation()
                    self.update_changeLocation()

                elif item[1] == "A":
                    items = item[2].split(', ')
                    locSet = [float(items[i]) for i in range(0, 6)]
                    self.rob.movej((locSet[0], locSet[1], locSet[2], locSet[3], locSet[4], locSet[5]),
                                   self.spd, self.acc, wait=False)
                    while True:
                        sleep(0.2)
                        if not self.rob.is_program_running():
                            break
                    self.rob.stopj()

                    self.getCurrPosition()
                    self.updateJoint()
                    self.update_changeJoint()
                    self.updateLocation()
                    self.update_changeLocation()

            elif item[0] == "L":
                if item[1] == "R":
                    items = item[2].split(', ')
                    locSet = [float(items[i]) for i in range(0, 6)]

                    b_vec = np.array(self.currLocation[3:])

                    vecR = R.from_rotvec(b_vec)
                    b_rom = vecR.as_matrix()

                    t_matx = np.matrix([[1, 0, 0],
                                        [0, math.cos(locSet[3]), -math.sin(locSet[3])],
                                        [0, math.sin(locSet[3]), math.cos(locSet[3])]])

                    t_maty = np.matrix([[math.cos(locSet[4]), 0, math.sin(locSet[4])],
                                        [0, 1, 0],
                                        [-math.sin(locSet[4]), 0, math.cos(locSet[4])]])

                    t_matz = np.matrix([[math.cos(locSet[5]), -math.sin(locSet[5]), 0],
                                        [math.sin(locSet[5]), math.cos(locSet[5]), 0],
                                        [0, 0, 1]])

                    a_rom = t_matz * t_maty * t_matx * b_rom

                    matR = R.from_matrix(a_rom)
                    a_vec = matR.as_rotvec()


                    self.rob.movel((self.currLocation[0] + locSet[0], self.currLocation[1] + locSet[1], self.currLocation[2] + locSet[2],
                                    a_vec[0], a_vec[1], a_vec[2]), self.spd, self.acc, relative=False, wait=False)
                    while True:
                        sleep(0.2)
                        if not self.rob.is_program_running():
                            break
                    self.rob.stopl()

                    self.getCurrPosition()
                    self.updateJoint()
                    self.update_changeJoint()
                    self.updateLocation()
                    self.update_changeLocation()

                elif item[1] == "A":
                    items = item[2].split(', ')
                    locSet = [float(items[i]) for i in range(0, 6)]

                    rVec = self.RPYtoRvec(locSet[3], locSet[4], locSet[5])

                    self.rob.movel((locSet[0], locSet[1], locSet[2], rVec[0], rVec[1], rVec[2]), self.spd, self.acc, wait=False)
                    while True:
                        sleep(0.2)
                        if not self.rob.is_program_running():
                            break
                    self.rob.stopl()

                    self.getCurrPosition()
                    self.updateJoint()
                    self.update_changeJoint()
                    self.updateLocation()
                    self.update_changeLocation()

            elif item[0] == "G":
                if item[1] == "R":
                    c_position = int(item[2])
                    t_position = 0
                    if c_position < -4095 or c_position > 4095:
                        self.log_blank.appendPlainText("error: out of range, change gripper position")
                        return

                    if self.currGripper + c_position > 4095:
                        t_position = 4095
                    elif self.currGripper + c_position < 0:
                        t_position = 0
                    else:
                        t_position = self.currGripper + c_position

                    GoalPosition(0, t_position)
                    while True:
                        sleep(0.5)
                        now_p = PresentPosition(0)
                        print(now_p)
                        if now_p != -1 and abs(t_position - now_p) <= 50:
                            break

                    self.updateGripper()

                elif item[1] == "A":
                    t_position = int(item[2])
                    if t_position < 0 or t_position > 4095:
                        self.log_blank.appendPlainText("error: out of range, target gripper position")
                        return

                    GoalPosition(0, t_position)
                    while True:
                        sleep(0.5)
                        now_p = PresentPosition(0)
                        print(now_p)
                        if now_p != -1 and abs(t_position - now_p) <= 50:
                            break

                    self.updateGripper()

            else:
                self.log_blank.appendPlainText("wrong commands exist")
                return


    def save_btn_click(self):
        root = Tk().withdraw()
        title = 'Save project as'
        fname = tkinter.filedialog.asksaveasfilename(filetypes=[('txt file', '.txt'), ('All files', '*')], title=title,
                                                     initialfile='*.txt')

        QtGui.QGuiApplication.processEvents()

        content =""
        for index in range(self.set_blank.count()):
            content = content + self.set_blank.item(index).text() + "\n"

        try:
            mkfile = open(fname, 'w')
        except:
            return
        mkfile.write(content)
        mkfile.close()
        self.log_blank.appendPlainText("file saved " + fname)


    def RPYtoRvec(self, roll, pitch, yaw):
        yawMatrix = np.matrix([
            [math.cos(yaw), -math.sin(yaw), 0],
            [math.sin(yaw), math.cos(yaw), 0],
            [0, 0, 1]
            ])
        pitchMatrix = np.matrix([
            [math.cos(pitch), 0, math.sin(pitch)],
            [0, 1, 0],
            [-math.sin(pitch), 0, math.cos(pitch)]
        ])

        rollMatrix = np.matrix([
            [1, 0, 0],
            [0, math.cos(roll), -math.sin(roll)],
            [0, math.sin(roll), math.cos(roll)]
        ])

        R = yawMatrix * pitchMatrix * rollMatrix

        theta = math.acos(((R[0, 0] + R[1, 1] + R[2, 2]) - 1) / 2)
        multi = 1 / (2 * math.sin(theta))

        rx = multi * (R[2, 1] - R[1, 2]) * theta
        ry = multi * (R[0, 2] - R[2, 0]) * theta
        rz = multi * (R[1, 0] - R[0, 1]) * theta

        return (rx, ry, rz)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
